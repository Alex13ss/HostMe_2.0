<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
                 http://www.springframework.org/schema/security 
                 http://www.springframework.org/schema/security/spring-security-3.2.xsd">


<global-method-security secured-annotations="enabled" />


<http auto-config="true" use-expressions="false" access-denied-page="/error.jsp">

		<intercept-url pattern="/index*" access="ROLE_ADMIN" />
		<intercept-url pattern="/add*" access="ROLE_ADMIN" />
		<intercept-url pattern="/delete/*" access="ROLE_ADMIN" />
		<form-login login-page="/login" default-target-url="/login"
			authentication-failure-url="/login" />
		<logout logout-url="/logout" logout-success-url="/index" />
		
		<anonymous username="guest" granted-authority="ROLE_ANONYMOUS" />
		<remember-me />
		</http>


	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="pass" authorities="ROLE_ADMIN,ROLE_USER" />
				<user name="user1" password="111" authorities="ROLE_USER" />
				<user name="user2" password="222" authorities="ROLE_USER" />
			</user-service>
			<!-- <jdbc-user-service data-source-ref="dataSource" users-by-username-query="select 
				user_id, login, password from user where user_id=?" authorities-by-username-query="select 
				role from user_roles where role_id =1 " /> -->
		</authentication-provider>
	</authentication-manager>
</beans:beans>